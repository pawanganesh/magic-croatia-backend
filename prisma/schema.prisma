// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  uid        String      @unique
  email      String      @unique
  firstName  String      @map("first_name")
  lastName   String      @map("last_name")
  avatar     String?
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @default(now()) @map("updated_at")
  bookings   Booking[]
  properties Property[]
  role       Role        @default(CUSTOMER)
  favorites  Favorites[]
  reviews    Review[]

  @@map("users")
}

model Property {
  id               Int             @id @default(autoincrement())
  name             String
  description      String
  featuredImageUrl String          @map("featured_image_url")
  gallery          String[]
  user             User            @relation(fields: [userId], references: [id])
  userId           Int             @map("user_id")
  bookings         Booking[]
  createdAt        DateTime        @default(now()) @map("created_at")
  updatedAt        DateTime        @default(now()) @map("updated_at")
  pricePerNight    Decimal         @map("price_per_night")
  address          String
  latitude         Float
  longitude        Float
  type             PropertyType    @default(APARTMENT)
  averageRating    Decimal         @default(0.00) @db.Decimal(10, 2)
  numberOfReviews  Int             @default(0)
  persons          Int             @default(1)
  maxChildrenCount Int             @default(0) @map("max_children_count")
  bedroomCount     Int             @default(1) @map("bedroom_count")
  size             Decimal         @default(0.00) @db.Decimal(10, 2)
  checkIn          String          @default("15:00") @map("check_in")
  checkOut         String          @default("10:00") @map("check_out")
  favorites        Favorites[]
  reviews          Review[]
  propertyExtras   PropertyExtras?

  @@map("properties")
}

model PropertyExtras {
  id           Int      @id @default(autoincrement())
  property     Property @relation(fields: [propertyId], references: [id])
  propertyId   Int      @unique @map("property_id")
  wifi         Boolean
  pool         Boolean
  airCondition Boolean  @map("air_condition")
  pets         Boolean
  freeParking  Boolean  @map("free_parking")

  @@map("property_extras")
}

model Booking {
  id                  Int      @id @default(autoincrement())
  property            Property @relation(fields: [propertyId], references: [id])
  propertyId          Int      @map("property_id")
  user                User     @relation(fields: [userId], references: [id])
  userId              Int      @map("user_id")
  startDate           DateTime @map("start_date")
  endDate             DateTime @map("end_date")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")
  status              Status   @default(ACTIVE)
  totalPrice          Decimal  @map("total_price")
  adultsCount         Int      @map("adults_count")
  childrenCount       Int      @map("children_count")
  stripePaymentIntent String   @default("") @map("stripe_payment_intent")

  @@map("bookings")
}

model Review {
  id         Int      @id @default(autoincrement())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int      @map("property_id")
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @map("user_id")
  reviewText String   @map("review_text")
  rating     Decimal
  createdAt  DateTime @default(now()) @map("created_at")

  @@map("reviews")
}

model Favorites {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@id([userId, propertyId])
  @@map("favorites")
}

enum PropertyType {
  APARTMENT
  HOUSE
}

enum Role {
  CUSTOMER
  LANDLORD
  ADMIN
}

enum Status {
  ACTIVE
  CANCELED
}
